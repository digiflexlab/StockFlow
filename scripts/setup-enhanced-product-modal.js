#!/usr/bin/env node

/**
 * Script de configuration rapide pour ProductModalEnhanced
 * V√©rifie et configure les d√©pendances n√©cessaires
 */

const fs = require('fs');
const path = require('path');

console.log('üöÄ Configuration du ProductModalEnhanced...\n');

// V√©rification des fichiers requis
const requiredFiles = [
  'src/types/units.ts',
  'src/types/products.ts',
  'src/hooks/useUnits.tsx',
  'src/components/modals/ProductModalEnhanced.tsx',
  'src/hooks/useProductMutations.tsx',
  'src/services/productValidation.ts',
  'src/components/common/BarcodeGenerator.tsx',
  'src/components/common/MarginCalculator.tsx',
  'src/components/test/ProductModalTest.tsx',
  'supabase/migrations/20241210000000-extend-products-table.sql'
];

console.log('üìã V√©rification des fichiers...');

let allFilesExist = true;
requiredFiles.forEach(file => {
  const filePath = path.join(process.cwd(), file);
  if (fs.existsSync(filePath)) {
    console.log(`‚úÖ ${file}`);
  } else {
    console.log(`‚ùå ${file} - MANQUANT`);
    allFilesExist = false;
  }
});

console.log('\n');

if (!allFilesExist) {
  console.log('‚ö†Ô∏è  Certains fichiers sont manquants. Veuillez les cr√©er avant de continuer.');
  process.exit(1);
}

// V√©rification des d√©pendances
console.log('üì¶ V√©rification des d√©pendances...');

const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
const requiredDeps = [
  '@tanstack/react-query',
  '@supabase/supabase-js',
  'lucide-react',
  'react-hook-form',
  'zod'
];

requiredDeps.forEach(dep => {
  if (packageJson.dependencies[dep] || packageJson.devDependencies[dep]) {
    console.log(`‚úÖ ${dep}`);
  } else {
    console.log(`‚ùå ${dep} - MANQUANT`);
  }
});

console.log('\n');

// Instructions de configuration
console.log('üìù Instructions de configuration :\n');

console.log('1. Base de donn√©es :');
console.log('   - Ex√©cutez la migration : supabase/migrations/20241210000000-extend-products-table.sql');
console.log('   - Ou utilisez Supabase Cloud pour appliquer les changements\n');

console.log('2. Test du composant :');
console.log('   - Importez ProductModalTest dans une page de test');
console.log('   - Ou utilisez directement ProductModalEnhanced dans Products.tsx\n');

console.log('3. Configuration des hooks :');
console.log('   - Assurez-vous que useUnits est configur√©');
console.log('   - V√©rifiez que useProducts inclut les relations units\n');

console.log('4. Validation :');
console.log('   - Testez la cr√©ation d\'un nouveau produit');
console.log('   - Testez l\'√©dition du produit "Huile palmiste"');
console.log('   - V√©rifiez les calculs automatiques\n');

console.log('üéØ Sc√©nario de test "Huile palmiste" :');
console.log('   - Nom: Huile palmiste');
console.log('   - SKU: HUILE-PALM-001');
console.log('   - Code barre: 6123456789012');
console.log('   - Unit√©: Bidon de 25L');
console.log('   - Prix d\'achat: 15,000 FCFA');
console.log('   - Prix de vente: 20,000 FCFA');
console.log('   - Taxe: 18%');
console.log('   - Magasins: [1, 2]\n');

console.log('‚úÖ Configuration termin√©e !');
console.log('üöÄ Vous pouvez maintenant utiliser le ProductModalEnhanced.'); 